import pandas as pd
import numpy as np

bnotes = pd.read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv", delimiter=";")

print(bnotes['quality'].unique())

X = bnotes.drop('quality', axis=1)
y = bnotes['quality']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y,test_size=0.3)

from sklearn.neural_network import MLPClassifier
mlp = MLPClassifier(max_iter=500, activation='relu')
mlp.fit(X_train,y_train)
pred = mlp.predict(X_test)

from sklearn.metrics import classification_report
print(classification_report(y_test,pred))

import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix
import seaborn as sns
# Plot confusion matrix
cm = confusion_matrix(y_test, pred)
fig, ax = plt.subplots(figsize=(10,10))
sns.heatmap(cm, annot=True, fmt='d', cmap=plt.cm.Blues, cbar=False)
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion matrix')
plt.show()

# Plot histogram of predicted quality values for MLP classifier
pred = mlp.predict(X_test)
plt.hist(pred, bins=range(3, 9), align='left')
plt.xticks(range(3, 9))
plt.xlabel("Predicted Quality")
plt.ylabel("Frequency")
plt.show()


